plugins {
    id 'com.android.library'
    id 'maven-publish'
   // id "androidx.room"
    id 'kotlin-android'

}

android {
    namespace 'com.arittek.o2chatsdk'
    compileSdk 34

    defaultConfig {
        minSdk 24

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    buildFeatures {
        viewBinding true
    }

   /* room {
        schemaDirectory("$projectDir/schemas")
    }*/
}

dependencies {

    api 'org.greenrobot:eventbus:3.3.1'
    api 'androidx.appcompat:appcompat:1.6.0'
    api 'com.google.android.material:material:1.8.0'
    api 'androidx.constraintlayout:constraintlayout:2.1.4'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    api 'androidx.navigation:navigation-fragment:2.5.3'
    api 'androidx.navigation:navigation-ui:2.5.3'
    api 'androidx.annotation:annotation:1.3.0'

    api 'androidx.activity:activity:1.9.0'
    api project(':app')
    api 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    api 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    api platform('com.google.firebase:firebase-bom:31.2.0')
    api 'com.google.firebase:firebase-messaging:23.1.1'
    api 'androidx.emoji:emoji-bundled:1.1.0'
    api 'androidx.startup:startup-runtime:1.1.1'
    api 'com.google.firebase:firebase-crashlytics-buildtools:2.9.4'

    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.retrofit2:converter-gson:2.9.0'



    api 'com.squareup.retrofit2:converter-scalars:2.3.0'
    api 'com.squareup.okhttp3:okhttp:4.9.0'
    api 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    api "com.github.akarnokd:rxjava3-retrofit-adapter:3.0.0"
    api 'com.auth0.android:jwtdecode:1.1.1'
//    api 'com.microsoft.signalr:signalr:5.0.10'
    api 'com.microsoft.signalr:signalr:5.0.11'
    api 'org.ocpsoft.prettytime:prettytime:5.0.4.Final'
    api 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    api "com.github.marlonlom:timeago:4.0.3"
    api "io.reactivex.rxjava2:rxandroid:2.1.1"
    api "io.reactivex.rxjava2:rxjava:2.1.1"

    api "androidx.cardview:cardview:1.0.0"
    api 'androidx.appcompat:appcompat:1.6.1'

    //api 'android.arch.persistence.room:runtime:1.1.1'
    //annotationProcessor 'android.arch.persistence.room:compiler:1.1.1'

    def room_version = "2.5.2"

    api("androidx.room:room-runtime:$room_version")

    annotationProcessor "androidx.room:room-compiler:$room_version"
    // optional - RxJava2 support for Room
    api "androidx.room:room-rxjava2:$room_version"

    // optional - RxJava3 support for Room
    api "androidx.room:room-rxjava3:$room_version"

    api "net.zetetic:android-database-sqlcipher:4.4.2"
    api 'com.google.android.flexbox:flexbox:3.0.0'

    api 'com.github.bumptech.glide:glide:4.16.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.16.0'

    api 'com.vanniktech:emoji-google:0.6.0'
    api 'com.vanniktech:emoji-ios:0.6.0'
    api 'com.vanniktech:emoji-twitter:0.6.0'
    api 'net.danlew:android.joda:2.12.1.1'
    api 'com.github.Justson:Downloader:v5.0.4-androidx'
    api 'net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:3.0.0-RC2'
    api 'com.karumi:dexter:6.2.2'
    api 'com.github.curioustechizen.android-ago:library:1.4.0'
    api 'com.github.rbague:ScreenshotCallback:v1.0'
    api 'org.jbundle.util.osgi.wrapped:org.jbundle.util.osgi.wrapped.org.apache.http.client:4.1.2'
    testImplementation 'commons-logging:commons-logging:1.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    api 'com.intuit.sdp:sdp-android:1.1.0'
    api 'com.intuit.ssp:ssp-android:1.1.0'

  /*  constraints {
        api("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.9.0") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        api("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }*/

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.6.0"
}

tasks.register("createReleaseAAR", Copy) {
    dependsOn 'assembleRelease'
    from("$buildDir/outputs/aar")
    include("*.aar")
    into("$buildDir/outputs/aar/${project.name}-release.aar")
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.findByName('release')
                groupId = 'com.o2chat.consumer.sdk'
                artifactId = 'o2chatsdk'
                version = '1.0.1' // Ensure this is correctly set
                artifact("$buildDir/outputs/aar/${project.name}-release.aar")

               /* pom.withXml {
                    // for dependencies and exclusions
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.api.allDependencies.withType(ModuleDependency) { ModuleDependency dp ->
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dp.group)
                        dependencyNode.appendNode('artifactId', dp.name)
                        dependencyNode.appendNode('version', dp.version)

                        // for exclusions
                        if (dp.excludeRules.size() > 0) {
                            def exclusions = dependencyNode.appendNode('exclusions')
                            dp.excludeRules.each { ExcludeRule ex ->
                                def exclusion = exclusions.appendNode('exclusion')
                                exclusion.appendNode('groupId', ex.group)
                                exclusion.appendNode('artifactId', ex.module)
                            }
                        }}}*/


/*                pom {
                    name.set('O2Chat SDK')
                    description.set('A chat SDK for Android.')
                    url.set('https://github.com/O2Chat/android-sdk') // Replace with your actual repo URL
                    licenses {
                        license {
                            name.set('The Apache License, Version 2.0')
                            url.set('http://www.apache.org/licenses/LICENSE-2.0.txt')
                        }
                    }
                    dependencies {
                        dependency {
                            groupId = 'org.greenrobot'
                            artifactId = 'eventbus'
                            version = '3.3.1'
                            scope = 'compile'
                        }
                        dependency {
                            groupId = 'androidx.appcompat'
                            artifactId = 'appcompat'
                            version = '1.6.1'
                            scope = 'compile'
                        }
                        dependency {
                            groupId = 'com.google.android.material'
                            artifactId = 'material'
                            version = '1.8.0'
                            scope = 'compile'
                        }
                        dependency {
                            groupId = 'androidx.constraintlayout'
                            artifactId = 'constraintlayout'
                            version = '2.1.4'
                            scope = 'compile'
                        }
                        dependency {
                            groupId = 'androidx.navigation'
                            artifactId = 'navigation-fragment'
                            version = '2.5.3'
                            scope = 'compile'
                        }
                        dependency {
                            groupId = 'androidx.navigation'
                            artifactId = 'navigation-ui'
                            version = '2.5.3'
                            scope = 'compile'
                        }
                        dependency {
                            groupId = 'androidx.lifecycle'
                            artifactId = 'lifecycle-livedata-ktx'
                            version = '2.5.1'
                            scope = 'compile'
                        }
                        dependency {
                            groupId = 'androidx.lifecycle'
                            artifactId = 'lifecycle-viewmodel-ktx'
                            version = '2.5.1'
                            scope = 'compile'
                        }
                        dependency {
                            groupId = 'com.squareup.retrofit2'
                            artifactId = 'retrofit'
                            version = '2.9.0'
                            scope = 'compile'
                        }
                        dependency {
                            groupId = 'com.squareup.retrofit2'
                            artifactId = 'converter-gson'
                            version = '2.9.0'
                            scope = 'compile'
                        }
                        dependency {
                            groupId = 'com.squareup.okhttp3'
                            artifactId = 'okhttp'
                            version = '4.9.0'
                            scope = 'compile'
                        }
                        dependency {
                            groupId = 'com.squareup.okhttp3'
                            artifactId = 'logging-interceptor'
                            version = '4.9.0'
                            scope = 'compile'
                        }
                        dependency {
                            groupId = 'androidx.room'
                            artifactId = 'room-runtime'
                            version = '2.5.2'
                            scope = 'compile'
                        }
                        dependency {
                            groupId = 'com.github.bumptech.glide'
                            artifactId = 'glide'
                            version = '4.16.0'
                            scope = 'compile'
                        }
                        dependency {
                            groupId = 'com.microsoft.signalr'
                            artifactId = 'signalr'
                            version = '5.0.11'
                            scope = 'compile'
                        }
                        dependency {
                            groupId = 'androidx.swiperefreshlayout'
                            artifactId = 'swiperefreshlayout'
                            version = '1.1.0'
                            scope = 'compile'
                        }
                        dependency {
                            groupId = 'io.reactivex.rxjava2'
                            artifactId = 'rxjava'
                            version = '2.1.1'
                            scope = 'compile'
                        }
                        dependency {
                            groupId = 'io.reactivex.rxjava2'
                            artifactId = 'rxandroid'
                            version = '2.1.1'
                            scope = 'compile'
                        }
                        dependency {
                            groupId = 'com.github.Justson'
                            artifactId = 'Downloader'
                            version = 'v5.0.4-androidx'
                            scope = 'compile'
                        }

                    }



                }*/
            }
        }

        repositories {
            mavenLocal()
            maven {
                name = "wight_imp_create_sdk"
                url = uri(layout.buildDirectory.dir("wight_imp_create_sdk").get().asFile.toURI())
            }
        }
    }

    tasks.named("publishReleasePublicationToMavenLocal") {
        dependsOn(tasks.named("bundleReleaseAar"))
    }

}